uname_out="$(uname -s)"
case "${uname_out}" in
  Darwin*)
    export MACHINE="mac"
  ;;
  Linux*)
    [[ -n "$(command -v yum)" ]] && export MACHINE="redhat"
    [[ -n "$(command -v apt-get)" ]] && export MACHINE="debian"
    [[ -n "$(command -v zypper)" ]] && export MACHINE="suse"
  ;;
  *)
    export MACHINE=""
    echo "OS unmanaged: ${uname_out}"
  ;;
esac


#--> naf - aliases -
alias activate='source ".venv/bin/activate"'
alias python='python3'
alias pip='python3 -m pip'
alias bpython='python3 -m bpython'
alias printenv='printenv | sort'
alias refresh='. $HOME/.profile && . ${ZDOTDIR:-$HOME}/.zaliases'
alias po='vsc ~/.profile'
alias za='vsc ~/.zaliases'
alias zr='vsc ${ZDOTDIR:-$HOME}/.zshrc'
#<-- naf - aliases -


#--> naf - suffix-aliases -
_shell="$(echo $0)"
_shell="${_shell#-}" # remove a trailing - for MacOs
if [[ "${_shell}" == "zsh" ]]; then  # suffix aliases are zsh specific, one doesn't want it to trigger an error on bash
  alias -s {log}="tail"
fi
#<-- naf - suffix-aliases -


#--> naf - functions -
function tail() {
  [[ " -h --help " == *" $1 "* ]] && helper "tail wrapper" "file path" "additional tail args" && return
  #[[ " -h --help " == *" $1 "* ]] && helper "tail + rainbow wrapper" "file path" "additional rainbow args" && return
  local _file="$1"

  command tail -f "${_file}" ${@:2}
  # It could wrap a combination of rainbow + tail as below
  #rainbow ${@:2} --red=^.*(?i)(error|severe|critical|exception).*$ command tail -f "${_file}"
}
#<-- naf - functions -
